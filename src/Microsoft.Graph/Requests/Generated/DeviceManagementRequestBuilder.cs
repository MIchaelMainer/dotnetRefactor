// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type DeviceManagementRequestBuilder.
    /// </summary>
    public partial class DeviceManagementRequestBuilder : EntityRequestBuilder, IDeviceManagementRequestBuilder
    {

        /// <summary>
        /// Constructs a new DeviceManagementRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public DeviceManagementRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IDeviceManagementRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IDeviceManagementRequest Request(IEnumerable<Option> options)
        {
            return new DeviceManagementRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for TermsAndConditions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTermsAndConditionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTermsAndConditionsCollectionRequestBuilder TermsAndConditions
        {
            get
            {
                return new DeviceManagementTermsAndConditionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("termsAndConditions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ApplePushNotificationCertificate.
        /// </summary>
        /// <returns>The <see cref="IApplePushNotificationCertificateRequestBuilder"/>.</returns>
        public IApplePushNotificationCertificateRequestBuilder ApplePushNotificationCertificate
        {
            get
            {
                return new ApplePushNotificationCertificateRequestBuilder(this.AppendSegmentToRequestUrl("applePushNotificationCertificate"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedDeviceOverview.
        /// </summary>
        /// <returns>The <see cref="IManagedDeviceOverviewWithReferenceRequestBuilder"/>.</returns>
        public IManagedDeviceOverviewWithReferenceRequestBuilder ManagedDeviceOverview
        {
            get
            {
                return new ManagedDeviceOverviewWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("managedDeviceOverview"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DetectedApps.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDetectedAppsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDetectedAppsCollectionRequestBuilder DetectedApps
        {
            get
            {
                return new DeviceManagementDetectedAppsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("detectedApps"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedDevices.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementManagedDevicesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementManagedDevicesCollectionRequestBuilder ManagedDevices
        {
            get
            {
                return new DeviceManagementManagedDevicesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("managedDevices"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceConfigurationsCollectionRequestBuilder DeviceConfigurations
        {
            get
            {
                return new DeviceManagementDeviceConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicies.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder DeviceCompliancePolicies
        {
            get
            {
                return new DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicies"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for SoftwareUpdateStatusSummary.
        /// </summary>
        /// <returns>The <see cref="ISoftwareUpdateStatusSummaryWithReferenceRequestBuilder"/>.</returns>
        public ISoftwareUpdateStatusSummaryWithReferenceRequestBuilder SoftwareUpdateStatusSummary
        {
            get
            {
                return new SoftwareUpdateStatusSummaryWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("softwareUpdateStatusSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyDeviceStateSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyDeviceStateSummaryRequestBuilder"/>.</returns>
        public IDeviceCompliancePolicyDeviceStateSummaryRequestBuilder DeviceCompliancePolicyDeviceStateSummary
        {
            get
            {
                return new DeviceCompliancePolicyDeviceStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicyDeviceStateSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicySettingStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder DeviceCompliancePolicySettingStateSummaries
        {
            get
            {
                return new DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicySettingStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationDeviceStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceConfigurationDeviceStateSummaryRequestBuilder"/>.</returns>
        public IDeviceConfigurationDeviceStateSummaryRequestBuilder DeviceConfigurationDeviceStateSummaries
        {
            get
            {
                return new DeviceConfigurationDeviceStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationDeviceStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for IosUpdateStatuses.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIosUpdateStatusesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIosUpdateStatusesCollectionRequestBuilder IosUpdateStatuses
        {
            get
            {
                return new DeviceManagementIosUpdateStatusesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("iosUpdateStatuses"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCategories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCategoriesCollectionRequestBuilder DeviceCategories
        {
            get
            {
                return new DeviceManagementDeviceCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCategories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ExchangeConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementExchangeConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementExchangeConnectorsCollectionRequestBuilder ExchangeConnectors
        {
            get
            {
                return new DeviceManagementExchangeConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("exchangeConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceEnrollmentConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder DeviceEnrollmentConfigurations
        {
            get
            {
                return new DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceEnrollmentConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConditionalAccessSettings.
        /// </summary>
        /// <returns>The <see cref="IOnPremisesConditionalAccessSettingsRequestBuilder"/>.</returns>
        public IOnPremisesConditionalAccessSettingsRequestBuilder ConditionalAccessSettings
        {
            get
            {
                return new OnPremisesConditionalAccessSettingsRequestBuilder(this.AppendSegmentToRequestUrl("conditionalAccessSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MobileThreatDefenseConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder MobileThreatDefenseConnectors
        {
            get
            {
                return new DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("mobileThreatDefenseConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementPartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceManagementPartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceManagementPartnersCollectionRequestBuilder DeviceManagementPartners
        {
            get
            {
                return new DeviceManagementDeviceManagementPartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceManagementPartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for NotificationMessageTemplates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementNotificationMessageTemplatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementNotificationMessageTemplatesCollectionRequestBuilder NotificationMessageTemplates
        {
            get
            {
                return new DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("notificationMessageTemplates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RoleDefinitions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRoleDefinitionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRoleDefinitionsCollectionRequestBuilder RoleDefinitions
        {
            get
            {
                return new DeviceManagementRoleDefinitionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("roleDefinitions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RoleAssignments.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRoleAssignmentsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRoleAssignmentsCollectionRequestBuilder RoleAssignments
        {
            get
            {
                return new DeviceManagementRoleAssignmentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("roleAssignments"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ResourceOperations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementResourceOperationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementResourceOperationsCollectionRequestBuilder ResourceOperations
        {
            get
            {
                return new DeviceManagementResourceOperationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("resourceOperations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TelecomExpenseManagementPartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder TelecomExpenseManagementPartners
        {
            get
            {
                return new DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("telecomExpenseManagementPartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RemoteAssistancePartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRemoteAssistancePartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRemoteAssistancePartnersCollectionRequestBuilder RemoteAssistancePartners
        {
            get
            {
                return new DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("remoteAssistancePartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsInformationProtectionAppLearningSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder WindowsInformationProtectionAppLearningSummaries
        {
            get
            {
                return new DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsInformationProtectionAppLearningSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsInformationProtectionNetworkLearningSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder WindowsInformationProtectionNetworkLearningSummaries
        {
            get
            {
                return new DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsInformationProtectionNetworkLearningSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TroubleshootingEvents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTroubleshootingEventsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTroubleshootingEventsCollectionRequestBuilder TroubleshootingEvents
        {
            get
            {
                return new DeviceManagementTroubleshootingEventsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("troubleshootingEvents"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for DeviceManagementVerifyWindowsEnrollmentAutoDiscovery.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder"/>.</returns>
        public IDeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder VerifyWindowsEnrollmentAutoDiscovery(
            string domainName = null)
        {
            return new DeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.verifyWindowsEnrollmentAutoDiscovery"),
                this.Client,
                domainName);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetEffectivePermissions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetEffectivePermissionsRequestBuilder"/>.</returns>
        public IDeviceManagementGetEffectivePermissionsRequestBuilder GetEffectivePermissions(
            string scope = null)
        {
            return new DeviceManagementGetEffectivePermissionsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEffectivePermissions"),
                this.Client,
                scope);
        }
    
    }
}
